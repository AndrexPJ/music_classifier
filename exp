
        /*
        AudioRecord blues_b =  WaveAudioLoader::loadAudioRecord(path + "blues_b.wav");
        AudioRecord classical_b =  WaveAudioLoader::loadAudioRecord(path + "classical_b.wav");
        AudioRecord country_b =  WaveAudioLoader::loadAudioRecord(path + "country_b.wav");
        AudioRecord disco_b =  WaveAudioLoader::loadAudioRecord(path + "disco_b.wav");
        AudioRecord hiphop_b =  WaveAudioLoader::loadAudioRecord(path + "hiphop_b.wav");
        AudioRecord jazz_b =  WaveAudioLoader::loadAudioRecord(path + "jazz_b.wav");
        AudioRecord metal_b =  WaveAudioLoader::loadAudioRecord(path + "metal_b.wav");
        AudioRecord pop_b =  WaveAudioLoader::loadAudioRecord(path + "pop_b.wav");
        AudioRecord reggae_b =  WaveAudioLoader::loadAudioRecord(path + "reggae_b.wav");
        AudioRecord rock_b =  WaveAudioLoader::loadAudioRecord(path + "rock_b.wav");
        std::vector< std::vector<double> > basis;
        basis.push_back(blues_b.getData()[0]);
        basis.push_back(classical_b.getData()[0]);
        basis.push_back(country_b.getData()[0]);
        basis.push_back(disco_b.getData()[0]);
        basis.push_back(hiphop_b.getData()[0]);
        basis.push_back(jazz_b.getData()[0]);
        basis.push_back(metal_b.getData()[0]);
        basis.push_back(pop_b.getData()[0]);
        basis.push_back(reggae_b.getData()[0]);
        basis.push_back(rock_b.getData()[0]);
        basis = Tools::getBasis(basis,8192);
        std::vector<double> out = Tools::experiment(ar.getData()[0],basis);
        */